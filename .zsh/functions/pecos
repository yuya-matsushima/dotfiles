#!/bin/zsh

if [[ $OSTYPE != 'darwin'* ]]; then
  echo "This command is only available in MacOS (Darwin) environment."
  return
fi

function _ymt_pecos_usage() {
  cat <<EOF
pecos call useful command using peco.

Usage:
    pecos cdr              search cdr history and change directory
    pecos commit-hash      search git log and copy commit-hash
    pecos docker-compose   search and download docker-compose.yml
    pecos history          search history
    pecos kill             select and kill process
    pecos rails            search Rails template and initialize Rails project
    pecos search           search find and directory in the current directory

Options:
    --help, -h             print help

Dependencies:
    peco
    git
EOF
}

function _ymt_pecos_cdr() {
  local selected_dir="$(cdr -l | sed 's/^[0-9]\+ \+//' | peco --prompt="cdr >" --query "$LBUFFER")"
  if [ -n "$selected_dir" ]; then
    cd $(eval echo ${selected_dir})
  fi
}

function _ymt_pecos_commit_hash() {
  local root_dir=$(git rev-parse --show-toplevel 2>/dev/null)
  if [ -z $root_dir ]; then
    echo "not under git control."
    return 1
  fi

  local hash=$(git log --pretty='%h %s (%an)' | peco --prompt='commit >' --query "$LBUFFER" | cut -d ' ' -f 1)
  echo $hash | pbcopy
  echo $hash
}

function _ymt_pecos_docker_compose_template() {
  local json=$(curl --silent https://api.github.com/repos/fillin-inc/templates/contents/docker-compose | jq '.[]')
  local template=$(echo ${json} | jq '.name' | grep '.yml' | sed -e 's/"//g' | sed -e 's/\.yml$//' | peco --prompt='docker-compose >')

  if [ -z $template ]; then
    echo "failed to retrieve templates."
    return 1
  fi

  echo "TEMPLATE: $template"

  local selected=$(echo ${json} | jq ". | select (.name == \"${template}.yml\") | .download_url" | sed -e 's/"//g')
  if [ -z $selected ]; then
    echo "failed to get the download_url for the selected template."
    return 1
  fi

  echo "download_url: $selected"

  curl -o docker-compose.yml --silent $selected
}

function _ymt_pecos_history() {
  local selected=$(history 1 | sort -k1,1nr | perl -ne 'BEGIN { my @lines = (); } s/^\s*\d+\*?\s*//; $in=$_; if (!(grep {$in eq $_} @lines)) { push(@lines, $in); print $in; }' | peco --prompt 'history >' --query "$LBUFFER")
  echo $selected
}

function _ymt_pecos_rails_template() {
  local json=$(curl --silent https://api.github.com/repos/fillin-inc/templates/contents/rails | jq '.[]')
  local template=$(echo ${json} | jq '.name' | grep '.rb' | sed -e 's/"//g' | sed -e 's/\.rb$//' | peco --prompt='Rails >')
  if [ -z "$template" ]; then
    echo "failed to retrieve templates."
    return 1
  fi

  local selected=$(echo ${json} | jq ". | select (.name == \"${template}.rb\") | .download_url" | sed -e 's/"//g')
  if [ -z $selected ]; then
    echo "failed to get the download_url for the selected template."
    return 1
  fi

  # create commit
  if [ ! -d .git ]; then
    git init
    git commit --allow-empty -m "initial commit"
  fi

  # download defaulg Gemfile
  if [ ! -f "Gemfile" ]; then
    curl -O --silent https://raw.githubusercontent.com/fillin-inc/templates/main/rails/example/Gemfile
  fi

  bundle config set without 'production'
  bundle i

  if [[ $template == *"api"* ]]; then
    bundle exec rails new . -v --force -m $selected -d mysql --skip-action-text --skip-action-mailbox --skip-action-cable --skip-turbolinks --skip-test --api
  else
    bundle exec rails new . -v --force -m $selected -d mysql --skip-action-text --skip-action-mailbox --skip-action-cable --skip-turbolinks --skip-test --webpacker
  fi
}

case ${1} in
  -h|--help)
    _ymt_pecos_usage
  ;;

  cdr)
    _ymt_pecos_cdr
  ;;

  commit-hash)
    _ymt_pecos_commit_hash
  ;;

  docker-compose)
    _ymt_pecos_docker_compose_template
  ;;

  history)
    _ymt_pecos_history
  ;;

  kill)
    ps ax -o pid,lstart,command | peco --prompt='process >' --query "$LBUFFER" | awk '{ print $1 }' | xargs kill -TERM
  ;;

  rails)
    _ymt_pecos_rails_template
  ;;

  search)
    find . | grep -v "\/\." | cut -c 3- | peco --prompt='find >' --query "$LBUFFER"
  ;;

  *)
    _ymt_pecos_usage
  ;;
esac
