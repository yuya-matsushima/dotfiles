#!/bin/zsh

if [[ $OSTYPE != 'darwin'* ]]; then
  echo "Error: This command is only available on macOS" >&2
  return 1
fi

_ymt_volume_usage() {
  cat <<EOF
volume is a command to change the volume of your MacOS.

Usage:
    volume 50        set output volume to 50 (available:0-100)
    volume status    print current volume status
    volume mute      mute the volume
    volume unmute    unmute the volume
    volume half      set output volume to 50
    volume max       set output volume to 100

Options:
    --help, -h       print help

Dependencies:
    MacOS
EOF
}

_ymt_volume_status() {
  local settings
  if ! settings=$(osascript -e 'get volume settings' 2>/dev/null); then
    echo "Error: Failed to get volume settings" >&2
    return 1
  fi
  echo "$settings" | awk '{ print $2 }' | sed -e 's/,//'
  echo "$settings" | awk '{ print $8 }'
}

case ${1} in
  --help|-h)
    _ymt_volume_usage
  ;;

  status)
    _ymt_volume_status
  ;;

  mute)
    if ! osascript -e 'set volume output muted true' 2>/dev/null; then
      echo "Error: Failed to mute volume" >&2
      return 1
    fi
    _ymt_volume_status
  ;;

  unmute)
    if ! osascript -e 'set volume output muted false' 2>/dev/null; then
      echo "Error: Failed to unmute volume" >&2
      return 1
    fi
    _ymt_volume_status
  ;;

  half)
    if ! osascript -e "set volume output volume 50" 2>/dev/null; then
      echo "Error: Failed to set volume" >&2
      return 1
    fi
    _ymt_volume_status
  ;;

  max)
    if ! osascript -e "set volume output volume 100" 2>/dev/null; then
      echo "Error: Failed to set volume" >&2
      return 1
    fi
    _ymt_volume_status
  ;;

  *)
    if [[ $1 =~ ^(100|[0-9]{1,2})$ ]]; then
      if ! osascript -e "set volume output volume $1" 2>/dev/null; then
        echo "Error: Failed to set volume to $1" >&2
        return 1
      fi
      _ymt_volume_status
    else
      echo "Please specify a number between 0 and 100." >&2
      return 1
    fi
  ;;
esac
