#!/bin/zsh

function _ymt_todaymd_usage() {
  cat <<EOF
todaymd creates a markdown file with a date prefix in the specified directory, and makes it editable.

Usage:
    todaymd         edit matkdown with CLI Editor
    todaymd search  list and search markdown files with peco in TODAYMD_DIR

Options:
    --help, -h   print help

Configurable Environment Variables:
  TODAYMD_DIR=path/to/default/save/dir

Dependencies:
    peco
    tmux
    vim
EOF
}

function _ymt_todaymd() {
  if [ -n "${TODAYMD_DIR}" ]; then
    local default_dir=${TODAYMD_DIR}
  else
    local default_dir=`pwd`
  fi
  read TODAYMD_FILENAME\?"Enter a file name: "
  read TODAYMD_DIR\?"Enter the directory(${default_dir}): "

  local filename=$TODAYMD_FILENAME
  local dir=$(eval echo ${TODAYMD_DIR:-${default_dir}})
  local file_path="${dir}/$(date '+%Y%m%d')_$(echo $filename | sed -e 's/\s\+/_/g').md"
  unset TODAYMD_FILENAME TODAYMD_DIR

  if [ ! -d $dir ]; then
    read -k 1 TODAYMD_CREATE\?"There is no directory: ${dir}. Do you want to create it?(y/n): "
    local create=$TODAYMD_CREATE
    unset TODAYMD_CREATE

    if [ $create != 'y' ]; then
      echo "\nStopped creating the file."
      return
    fi

    echo "\nCreating a directory: ${dir}"
    mkdir -p $dir
  fi

  if [ ! -f $file_path ];then
    echo "Create a markdown file: ${file_path}"
    echo "# $filename" > $file_path
  fi

  vim $file_path
}

function _ymt_todaymd_search() {
  if [ -z "${TODAYMD_DIR}" ]; then
    echo "TODAYMD_DIR is not set."
    exit 1
  fi
  local file=$(ls ${TODAYMD_DIR} | peco --prompt='file >')
  if [ -n $file ]; then
    vim ${TODAYMD_DIR}/${file}
  fi
}

case ${1} in
  -h|--help)
    _ymt_todaymd_usage
  ;;

  search)
    _ymt_todaymd_search
  ;;

  *)
    _ymt_todaymd
  ;;
esac
