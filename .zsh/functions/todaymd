#!/bin/zsh

_ymt_todaymd_usage() {
  cat <<EOF
todaymd creates a markdown file with a date prefix in the specified directory, and makes it editable.

Usage:
    todaymd           create matkdown with CLI Editor
    todaymd list      list markdown files in TODAYMD_DIR
    todaymd edit      search and edit file with fzf
    todaymd rm        search and remove file with fzf

Options:
    --help, -h        print help

Configurable Environment Variables:
  TODAYMD_DIR=path/to/default/save/dir

Dependencies:
    fzf
    tmux
    vim
EOF
}

_ymt_todaymd() {
  local filename file_path dir entered_dir create
  local default_dir=$(pwd)
  if [ -n "${TODAYMD_DIR}" ]; then
    default_dir=${TODAYMD_DIR}
  fi

  filename="$*"
  if [[ -z "${filename}" ]]; then
    read -r filename\?"Enter a file name: "
  fi
  read -r entered_dir\?"Enter the directory(${default_dir}): "

  dir="${entered_dir:-${default_dir}}"
  file_path="${dir}/$(date '+%Y%m%d')_$(echo "$filename" | sed -e 's/\s\+/_/g').md"

  if [[ ! -d "$dir" ]]; then
    read -r -k 1 create\?"There is no directory: ${dir}. Do you want to create it?(y/n): "
    if [[ "$create" != 'y' ]]; then
      echo "\nStopped creating the file."
      return
    fi

    echo "\nCreating a directory: ${dir}"
    mkdir -p "$dir"
  fi

  if [[ ! -f "$file_path" ]]; then
    echo "Create a markdown file: ${file_path}"
    echo "# $filename" > $file_path
  fi

  if ! command -v vim >/dev/null 2>&1; then
    echo "Error: vim is not installed" >&2
    return 1
  fi
  vim "$file_path"
}

_ymt_todaymd_list() {
  if [ -z "${TODAYMD_DIR}" ]; then
    echo "TODAYMD_DIR is not set."
    return 1
  fi

  find "${TODAYMD_DIR}" -name \*.md -type f -exec basename {} \; | sort -r
}

_ymt_todaymd_edit() {
  local file

  if [ -z "${TODAYMD_DIR}" ]; then
    echo "TODAYMD_DIR is not set."
    return 1
  fi

  file=$(find "${TODAYMD_DIR}" -name \*.md -type f -exec basename {} \; | sort -r | fzf --prompt='file >')
  if [[ -n "$file" ]]; then
    if ! command -v vim >/dev/null 2>&1; then
      echo "Error: vim is not installed" >&2
      return 1
    fi
    vim "${TODAYMD_DIR}/${file}"
  fi
}

_ymt_todaymd_rm() {
  local file

  if [ -z "${TODAYMD_DIR}" ]; then
    echo "TODAYMD_DIR is not set."
    return 1
  fi

  file=$(find "${TODAYMD_DIR}" -name \*.md -type f -exec basename {} \; | sort -r | fzf --prompt='file >')
  if [[ -n "$file" ]]; then
    rm -i "${TODAYMD_DIR}/${file}"
  fi
}

case ${1} in
  -h|--help)
    _ymt_todaymd_usage
  ;;

  list)
    _ymt_todaymd_list
  ;;

  edit)
    _ymt_todaymd_edit
  ;;

  rm)
    _ymt_todaymd_rm
  ;;

  *)
    _ymt_todaymd "$@"
  ;;
esac
