[ -n "$ZSH_PROFILE" ] && zmodload zsh/zprof && zprof
export LANG=ja_JP.UTF-8
case ${UID} in
0)
    LANG=C
    ;;
esac

[ -f $HOME/.zshenv ] && source $HOME/.zshenv

autoload colors && colors

case ${UID} in
0)
    PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') %B%{${fg[red]}%}%30<~<%/%%%{${reset_color}%}%b "
    PROMPT2="%B%{${fg[red]}%}%_#%{${reset_color}%}%b "
    SPROMPT="%B%{${fg[white]}%}%r is correct? [n,y,a,e]:%{${reset_color}%}%b "
    ;;
*)
    # シンプルなプロンプト（個人情報を含まない）
    if [[ "$TINY_PROMPT" == "1" ]]; then
        PROMPT="%{${fg[cyan]}%}$ %{${reset_color}%}"
        PROMPT2="%{${fg[red]}%}> %{${reset_color}%}"
        SPROMPT="%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
    else
        PROMPT="%{${fg[cyan]}%}%30<~<%/%%%{${reset_color}%} "
        PROMPT2="%{${fg[red]}%}%_%%%{${reset_color}%} "
        SPROMPT="%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
        [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] &&
            PROMPT="%{${fg[red]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
    fi
    ;;
esac

setopt auto_cd
setopt auto_pushd
setopt correct
setopt list_packed
setopt noautoremoveslash
setopt nolistbeep
setopt nobeep
setopt extendedglob

bindkey -d
bindkey -v
bindkey '\e\e' vi-cmd-mode
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\e[Z" reverse-menu-complete

# Vi mode cursor shape indicator
function zle-line-init zle-keymap-select {
    case $KEYMAP in
        vicmd)      echo -ne '\e[1 q' ;;  # Block cursor for normal mode
        viins|main) echo -ne '\e[5 q' ;;  # Beam cursor for insert mode
    esac
}
zle -N zle-line-init
zle -N zle-keymap-select
echo -ne '\e[5 q'  # Set beam cursor on startup

# history
HISTFILE=${HOME}/.zsh_history
HISTSIZE=250000
SAVEHIST=250000
setopt hist_ignore_dups
setopt share_history

autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit -u
setopt complete_aliases
autoload zed
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

## alias
setopt complete_aliases     # aliased ls needs if file/dir completions work

case "${OSTYPE}" in
freebsd*|darwin*)
    alias ls="ls -G -w"
    ;;
linux*)
    alias ls="ls --color"
    ;;
esac
alias l="ls"
alias la="ls -a"
alias ll="ls -l"
alias lt="ls -t"
alias j="jobs -l"
alias agless='ag --pager="less -XgmR"'
(( $+commands[colordiff] )) && alias diff="colordiff -u"
if (( $+commands[asdf] )); then
  local asdf_path="$(brew --prefix asdf 2>/dev/null)/libexec/asdf.sh"
  [[ -f "$asdf_path" ]] && . "$asdf_path"
fi
(( $+commands[awsume] )) && alias awsume="source awsume"
(( $+commands[direnv] )) && eval "$(direnv hook zsh)"
# Use GNU grep if available (for personal use only)
(( $+commands[ggrep] )) && alias ggrep="$HOMEBREW_PREFIX/bin/ggrep"
if (( $+commands[git] )); then
  alias root_path='git rev-parse --show-toplevel 2>/dev/null || echo .'
  alias root='cd $(root_path)'
fi
if (( $+commands[go] )); then
  export GOPATH=$(go env GOPATH)
  export GOBIN=${GOPATH}/bin
  export ASDF_GOLANG_MOD_VERSION_ENABLED=true
fi
(( $+commands[kubectl] )) && source <(kubectl completion zsh 2>/dev/null) 2>/dev/null
(( $+commands[qr] )) && alias qr="qrencode -t UTF8"
# tealdeer: tldr client
(( $+commands[tldr] )) && alias tldr="tldr --language=en"
# Tiny prompt mode for screen recording
alias tinyprompt='export TINY_PROMPT=1 && exec zsh'
alias normalprompt='unset TINY_PROMPT && exec zsh'

case "${TERM}" in
screen)
    TERM=xterm
    ;;
screen-256color)
    TERM=xterm-256color
    ;;
esac

case "${TERM}" in
xterm|xterm-color|xterm-256color)
    export LSCOLORS=exfxcxdxbxegedabagacad
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
    ;;
esac

REPORTTIME=3

[ -f $HOME/.zsh/asdf_completion.zsh ] && source $HOME/.zsh/asdf_completion.zsh
(( $+commands[less] )) && source $HOME/.zsh/config/less.zsh
[ -n "$ZSH_PROFILE" ] && zprof | less
